/*
 * utilities.h
 *
 *  Created on: Mar 13, 2023
 *      Author: Master
 */

#ifndef UTILITIES_H_
#define UTILITIES_H_



#define GET_BIT(NUMBER, BIT_NUMBER) 						(((NUMBER)>>(BIT_NUMBER))&1)
#define SET_BIT(NUMBER, BIT_VALUE, BIT_NUMBER)				((NUMBER)|=((BIT_VALUE)<<(BIT_NUMBER)))

#define GET_FIRST_4_BITS(NUMBER)							((NUMBER) & 0x0F)
#define GET_SECOND_4_BITS(NUMBER)							(((NUMBER) & 0xF0) >> 4)

#define GET_FIRST_5_BITS(NUMBER)							((NUMBER) & 0x1F)
#define GET_SECOND_5_BITS(NUMBER)							((NUMBER & 0x3E0) >> 5)

#define GET_FIRST_8_BITS(NUMBER)							(NUMBER & 0xFF)

#define CONCATINATE_2_BITS_TO_4(HIGH_NUMBER, LOW_NUMBER)	(((HIGH_NUMBER) << 2) | (LOW_NUMBER))
#define CONCATINATE_4_BITS_TO_8(HIGH_NUMBER, LOW_NUMBER)	(((HIGH_NUMBER) << 4) | (LOW_NUMBER))
#define CONCATINATE_5_BITS_TO_10(HIGH_NUMBER, LOW_NUMBER)	(((HIGH_NUMBER) << 5) | (LOW_NUMBER))

#define SWITCH_8_BITS(NUMBER)								(CONCATINATE_4_BITS_TO_8(GET_FIRST_4_BITS(NUMBER), GET_SECOND_4_BITS(NUMBER)))

#define LEFT_SHIFT_4_BIT(NUMBER)							((GET_BIT(NUMBER, 3) << 0) | GET_FIRST_4_BITS((NUMBER << 1)))
#define RIGHT_SHIFT_4_BIT(NUMBER)							((GET_BIT(NUMBER, 0) << 3) | GET_FIRST_4_BITS((NUMBER >> 1)))

#define LEFT_SHIFT_5_BIT(NUMBER)							((GET_BIT(NUMBER, 4) << 0) | GET_FIRST_5_BITS((NUMBER << 1)))
#define RIGHT_SHIFT_5_BIT(NUMBER)							((GET_BIT(NUMBER, 0) << 4) | GET_FIRST_5_BITS((NUMBER >> 1)))

#define LEFT_SHIFT_8_BIT(NUMBER)							((GET_BIT(NUMBER, 7) << 0) | GET_FIRST_8_BITS((NUMBER << 1)))
#define RIGHT_SHIFT_8_BIT(NUMBER)							((GET_BIT(NUMBER, 0) << 7) | GET_FIRST_8_BITS((NUMBER >> 1)))

#define GET_SBOX_ROW(NUMBER)								((GET_BIT(NUMBER, 3) << 1) + GET_BIT(NUMBER, 0))
#define GET_SBOX_COLUMN(NUMBER)								((GET_BIT(NUMBER, 2) << 1) + GET_BIT(NUMBER, 1))

#define XOR(FIRST_NUMBER, SECOND_NUMBER)					((FIRST_NUMBER)^(SECOND_NUMBER))




#endif /* UTILITIES_H_ */
